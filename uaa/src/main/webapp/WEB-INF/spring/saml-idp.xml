<?xml version="1.0" encoding="UTF-8" ?>
<!-- Cloud Foundry Copyright (c) [2009-2014] Pivotal Software, Inc. All Rights 
    Reserved. This product is licensed to you under the Apache License, Version 
    2.0 (the "License"). You may not use this product except in compliance with 
    the License. This product includes a number of subcomponents with separate 
    copyright notices and license terms. Your use of these subcomponents is subject 
    to the terms and conditions of the subcomponent's license, as noted in the 
    LICENSE file. -->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <bean id="samlIdpFilter" class="org.springframework.security.web.FilterChainProxy">
        <security:filter-chain-map
            request-matcher="ant">
            <security:filter-chain pattern="/saml/idp/SSO/**"
                filters="samlSecurityContextPersistenceFilter,samlIdpWebSsoProcessingFilter" />
        </security:filter-chain-map>
    </bean>

    <security:authentication-manager id="samlIdpAuthenticationManager">
        <security:authentication-provider
            ref="samlIdpAuthenticationProvider" />
    </security:authentication-manager>

    <bean id="samlIdpAuthenticationProvider"
        class="org.cloudfoundry.identity.uaa.login.saml.idp.IdpSamlAuthenticationProvider" />

    <!-- SAML IdP processing filter for Web SSO profile messages. -->
    <bean id="samlIdpWebSsoProcessingFilter"
        class="org.springframework.security.saml.SAMLProcessingFilter">
        <constructor-arg value="/saml/idp/SSO" />
        <property name="authenticationManager" ref="samlIdpAuthenticationManager" />
        <property name="authenticationSuccessHandler" ref="samlIdpSuccessHandler" />
        <!-- <property name="authenticationFailureHandler" ref="samlLoginFailureHandler" /> -->
        <property name="contextProvider" ref="idpContextProvider" />
    </bean>

    <bean id="samlIdpSuccessHandler"
        class="org.cloudfoundry.identity.uaa.login.saml.idp.IdpSamlAuthenticationSuccessHandler">
        <property name="idpWebSsoProfile" ref="idpWebSsoProfileImpl" />
        <property name="metadataManager" ref="metadata" />
    </bean>

    <bean id="idpWebSsoProfileImpl"
        class="org.cloudfoundry.identity.uaa.login.saml.idp.IdpWebSsoProfileImpl">
    </bean>

    <bean id="idpContextProvider"
        class="org.cloudfoundry.identity.uaa.login.saml.idp.IdpSamlContextProviderImpl" />

    <!-- Filter automatically generates default IdP metadata -->
    <bean id="idpMetadataGeneratorFilter"
        class="org.cloudfoundry.identity.uaa.login.saml.idp.IdpMetadataGeneratorFilter">
        <constructor-arg ref="zoneAwareIdpMetadataGenerator" />
        <property name="manager" ref="metadata" />
    </bean>

    <bean id="zoneAwareIdpMetadataGenerator"
        class="org.cloudfoundry.identity.uaa.login.saml.idp.ZoneAwareIdpMetadataGenerator">
        <property name="extendedMetadata" ref="idpExtendedMetaData" />
        <property name="wantAuthnRequestSigned"
            value="${login.saml.wantAuthnRequestSigned:false}" />
        <property name="entityBaseURL"
            value="${login.entityBaseURL:http://localhost:8080/uaa}" />
        <property name="entityId" ref="samlIdpEntityID" />
        <property name="samlWebSSOFilter" ref="samlIdpWebSsoProcessingFilter" />
    </bean>

    <bean id="idpExtendedMetaData"
        class="org.cloudfoundry.identity.uaa.login.saml.idp.IdpExtendedMetadata">
        <property name="alias"
            value="#{T(org.cloudfoundry.identity.uaa.util.UaaStringUtils).getHostIfArgIsURL(@samlIdpAlias)}" />
        <property name="signMetadata" value="${login.saml.signMetaData:true}" />
        <property name="assertionsSigned" value="${login.saml.idp.assertionSigned:true}" />
        <property name="assertionTimeToLiveSeconds" value="${login.saml.idp.assertionTimeToLiveSeconds:600}" />
    </bean>

    <bean id="samlIdpAlias" class="java.lang.String">
        <constructor-arg
            value="${login.saml.idp.entityIDAlias:${login.idp.entityID:unit-test-idp}}" />
    </bean>

    <bean id="samlIdpEntityID" class="java.lang.String">
        <constructor-arg value="${login.idp.entityID:unit-test-idp}" />
    </bean>

    <bean id="spMetaDataProviders"
        class="org.cloudfoundry.identity.uaa.login.saml.idp.SamlServiceProviderConfigurator">
        <property name="clientParams" ref="httpClientParams" />
        <property name="parserPool" ref="parserPool"/>
    </bean>

    <bean id="serviceProviderChangedListener"
        class="org.cloudfoundry.identity.uaa.login.saml.idp.SamlServiceProviderChangedListener">
        <constructor-arg name="configurator" ref="spMetaDataProviders"/>
        <constructor-arg name="zoneProvisioning" ref="identityZoneProvisioning"/>
        <property name="metadataManager" ref="metadata" />
    </bean>
</beans>
